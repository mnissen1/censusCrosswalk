library(tidyverse)
?where
usethis::use_data_raw(name = 'mydataset')
usethis::use_data_raw(name = 'ltbd_weights')
?read_csv
# 2000 to 2010 weights
ltbd_weights_00_10 <- readr::read_csv("data-raw/crosswalk_2000_2010.csv")
?usethis::use_data()
usethis::use_data_raw()
usethis::use_data(ltbd_weights_00_10, overwrite = TRUE, internal = TRUE)
load("E:/censusCrosswalk/R/sysdata.rda")
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data$tractID, collapse = "|")
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data$tractID, collapse = "|")
fips_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data[tractID], collapse = "|")
fips_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(tractID), collapse = "|")
fips_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
xwalk_00_10(census_data, tractID = "trtid")
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(tractID), collapse = "|")
fips_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = "trtid")
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
tractID <- enquo(tractID)
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(tractID), collapse = "|")
fips_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
tractID <- enquo(tractID)
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(!! tractID), collapse = "|")
fips_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
tractID <- enquo(tractID)
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(!! tractID), collapse = "|")
# Filter crosswalk data by relevant FIPS (reduces interpolation time)
crosswalk_filter <-
ltbd_weights_00_10 %>%
filter(str_detect(trtid00, fips_filter))
# Remove full crosswalk data
rm(crosswalk_00_10)
crosswalk_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
# # remove original census data, filtered crosswalk data
# rm(census_data)
# rm(crosswalk_filter)
#
# # Save Results ------------------------------------------------------------
# write_csv(
#   census_data_xwalk,
#   path = paste0(homedir, savedir, "census_data_xwalk.csv"),
#   na = ""
# )
load("E:/censusCrosswalk/R/sysdata.rda")
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
tractID <- enquo(tractID)
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(!! tractID), collapse = "|")
# Filter crosswalk data by relevant FIPS (reduces interpolation time)
crosswalk_filter <-
ltbd_weights_00_10 %>%
filter(str_detect(trtid00, fips_filter))
# Remove full crosswalk data
rm(crosswalk_00_10)
crosswalk_filter
}
census_data <- tibble(trtid = c("5646", "2848", "3414", "5462"), test = c(1, 5, 23, 15))
xwalk_00_10(census_data, tractID = trtid)
#' (https://s4.ad.brown.edu/projects/diversity/Researcher/LTBDDload/DataList.aspx).
#' It assumes that all numeric values in the specified ACS/Census data are to be
#' crosswalked, but this can be adjusted.
#' It outputs the original data crosswalked to 2010 boundaries.
#'
#' @param census_data An R object containing ACS/Census data
#' @param tractID variable name that contains the tract ID
#' @param vars ACS/Census variables to crosswalk (defaults to all numeric)
#' @return Crosswalked ACS/Census data (2010 boundaries)
#' @export
xwalk_00_10 <- function(census_data, tractID, vars = tidyselect::where(is.numeric)){
tractID <- enquo(tractID)
# FIPS filter from Census/ACS data
fips_filter <- paste(census_data %>% select(!! tractID), collapse = "|")
# Filter crosswalk data by relevant FIPS (reduces interpolation time)
crosswalk_filter <-
ltbd_weights_00_10 %>%
filter(str_detect(trtid00, fips_filter))
# Remove full crosswalk data
rm(ltbd_weights_00_10)
crosswalk_filter
}
source('E:/censusCrosswalk/R/xwalk_00_10.R', echo=TRUE)
source('E:/censusCrosswalk/R/xwalk_00_10.R', echo=TRUE)
ltbd_weights_00_10
source('E:/censusCrosswalk/R/xwalk_00_10.R', echo=TRUE)
?rename
?everything
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::load_all()
install.packages("ps")
